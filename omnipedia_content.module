<?php

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Url;

/**
 * Implements hook_help().
 *
 * Displays a help message when adding new local media detailing our naming
 * conventions. Note that is not displayed for remote video, as the title of
 * that is pulled from the remote video title, not an uploaded file.
 */
function omnipedia_content_help($routeName, RouteMatchInterface $routeMatch) {
  switch ($routeName) {
    case 'entity.media.add_form':

      /** @var string */
      $mediaTypeId = $routeMatch->getParameter('media_type')->id();

      if ($mediaTypeId === 'remote_video') {
        return;
      }

      return '<p>' . \t(
        'Local media names should be descriptive, meaningful, use title case, lower case file extensions, and avoid unnecessary numbers or versioning (as Drupal handles that for you). For example, "<code>Toronto_Ontario_waterfront.jpg</code>" is preferable over "<code>TOR73454.JPG</code>". This allows media names to be consistent and long-lived and thus easy to reference in wiki pages. Additionally, this mimics <a href=":wikipediaFileNames" target="_blank">the Wikipedia naming conventions</a> for users who notice the detail.',
        [':wikipediaFileNames' => Url::fromUri('https://en.wikipedia.org/wiki/Wikipedia:File_names')->toString()]
      ) . '</p>';

  }
}

/**
 * Implements hook_markdown_extension_info_alter().
 *
 * This performs the following:
 *
 * - Replaces the heading permalink Markdown plug-in and CommonMark extension
 *   with our own plug-in and extension.
 *
 * - Replaces the 'rezozero/commonmark-ext-footnotes' extension with the
 *   'league/commonmark-ext-footnotes' extension that ships with CommonMark
 *   1.5+. Note that the extension name is not updated, and so will not apply
 *   our custom class when the Markdown module switches to the
 *   'league/commonmark-ext-footnotes' extension.
 *
 * @see \Drupal\omnipedia_content\Plugin\Markdown\CommonMark\Extension\HeadingPermalinkExtension
 *   Our heading permalink Markdown plug-in class.
 *
 * @see \Drupal\omnipedia_content\CommonMark\Extension\HeadingPermalink\HeadingPermalinkExtension
 *   Our heading permalink CommonMark extension.
 *
 * @see \Drupal\omnipedia_content\Plugin\Markdown\CommonMark\Extension\FootnoteExtension
 *   Our footnotes Markdown plug-in class.
 *
 * @see \League\CommonMark\Extension\Footnote\FootnoteExtension
 *   CommonMark 1.5+ footnotes extension.
 */
function omnipedia_content_markdown_extension_info_alter(array &$info) {
  $info['league/commonmark-ext-heading-permalink']['class'] =
    'Drupal\\omnipedia_content\\Plugin\\Markdown\\CommonMark\\Extension\\HeadingPermalinkExtension';

  // @todo Is this needed?
  $info['league/commonmark-ext-heading-permalink']['installedClass'] =
    'Drupal\\omnipedia_content\\CommonMark\\Extension\\HeadingPermalink\\HeadingPermalinkExtension';

  // Alter footnotes to use the version that now ships with CommonMark until the
  // Markdown module releases with support for it.
  if (isset($info['rezozero/commonmark-ext-footnotes'])) {
    $info['rezozero/commonmark-ext-footnotes']['class'] =
      'Drupal\\omnipedia_content\\Plugin\\Markdown\\CommonMark\\Extension\\FootnoteExtension';

    $info['rezozero/commonmark-ext-footnotes']['installedClass'] =
      'League\\CommonMark\\Extension\\Footnote\\FootnoteExtension';

    $info['rezozero/commonmark-ext-footnotes']['url'] =
      'https://commonmark.thephpleague.com/extensions/footnotes/';

    // Use CommonMark's installed status.
    $info['rezozero/commonmark-ext-footnotes']['installed'] =
      $info['league/commonmark-ext-heading-permalink']['installed'];
  }
}

/**
 * Implements hook_link_alter().
 *
 * The Login Destination module adds a 'current' query item with the unaliased
 * path of the current route, but it doesn't seem to be needed for our use-case,
 * clutters up URLs, and is sometimes incorrect due to caching. For those
 * reasons and since it doesn't seem like this query item is used by anything in
 * Drupal core or the contrib modules we use, we just unset it.
 *
 * @see https://www.drupal.org/project/login_destination/issues/3097721
 *   Open issue regarding the caching.
 *
 * @see https://www.drupal.org/project/login_destination/issues/3227126
 *   Feature request to conditionally add the 'current' query item only if one
 *   or more redirect destinations configured to the current page.
 */
function omnipedia_content_link_alter(array &$variables) {
  unset($variables['options']['query']['current']);
}
